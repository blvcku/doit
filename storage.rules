rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
		match /users/{uid}/{profileImage}{
    	allow write: if request.auth.uid == uid && request.resource.contentType.matches('image/.*');
      allow read: if true;
    }
    match /users/default/{profileImage}{
    	allow read;
    }
    match /projects/{id}/banner{
      allow read: if resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
    match /projects/{project}/messages/{message}{
    	allow read: if resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
    match /tasks/{id}/file{
    	allow read: if resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
    match /forms/{form}/{question}/file{
    	allow read: if resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
    match /temp/forms/{form}/{question}/file{
    	allow create: if request.resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
    match /temp/tasks/{task}/file{
    	allow create: if request.resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
    match /temp/posts/{post}/file{
    	allow create: if request.resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
    match /temp/projects/{project}/messages/{message}{
    	allow create: if request.resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
    match /posts/{post}/file{
    	allow read: if resource.metadata.owner == request.auth.uid && request.auth.token.email_verified;
    }
  }
}